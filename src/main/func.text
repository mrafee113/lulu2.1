        for (int each_func_dcl = 0; each_func_dcl < ctx.func_dcl().size(); each_func_dcl++) {

            // args and args_var sizes prepared
            int argsSize = ctx.func_dcl().get(each_func_dcl).args().size();
            int argsVarSize;
            if (ctx.func_dcl().get(each_func_dcl).args_var() == null) {
                argsVarSize = 0;
            } else {
                argsVarSize = 1;
            }

            // if function has output
            if (ctx.func_dcl().get(each_func_dcl).getText().contains("=")) {

                // both args
                if (argsSize == 2 && argsVarSize == 0) {
                    System.out.println("test----------- " + ctx.func_dcl().get(each_func_dcl).getText());
                }
                // input is args & output is args_var
                else if (argsSize == 1 && argsVarSize == 1) {
                    System.out.println("test----------- " + ctx.func_dcl().get(each_func_dcl).getText());

                }
                // output is args & no input
                else if (argsSize == 1 && argsVarSize == 0) {
                    System.out.println("test----------- " + ctx.func_dcl().get(each_func_dcl).getText());

                }

            }
            // if it doesn't
            else {
                // input is args
                if (argsSize == 1) {
                    System.out.println("test----------- " + ctx.func_dcl().get(each_func_dcl).getText());
                    FunctionEntry functionEntry = new FunctionEntry();
                    functionEntry.setEntryType(Entry.EntryType.FUNCTION);

                    String name = ctx.func_dcl().get(each_func_dcl).ID().getText();
                    functionEntry.setName(name);

                    // -1 in functions from declare scope means the size has to be calculated later
                    //----------------------------------------------------------------to-be-checked---------------------
                    functionEntry.setSize(-1);

                    String temp = ctx.func_dcl().get(each_func_dcl).getText().replace(name, "").replace(";", "").replace("(", "").replace(")", "");
                    String args[] = temp.split(",");
                    for (int eachVar = 0; eachVar < args.length; eachVar++) {
                        VariableEntry variableEntry = new VariableEntry();
                        variableEntry.setEntryType(Entry.EntryType.VARIABLE);

                        String secTemp[] = args[eachVar].split("\\[");
                        int dimNum = secTemp.length - 1;
                        String type = secTemp[0];

                        variableEntry.setDimensionNumber(dimNum);
                        variableEntry.setName("");
                        variableEntry.setVariableType(type.toUpperCase());
                        if (type == "int") {
                            variableEntry.setSize(4);
                        } else if (type == "float") {
                            variableEntry.setSize(8);
                        } else if (type == "bool") {
                            variableEntry.setSize(1);
                        } else if (type == "string") {
                            int size = 0 * 2 + 2;
                            variableEntry.setSize(size);
                        } else {
                            variableEntry.setVariableType(type.toUpperCase());
                            variableEntry.setSize(4);
                        }
                    }

                    temp = "float[][],int[],tpye";

                    String test[] = args[2].split("\\[");
                    System.out.println(test.length - 1);
                    System.out.println("--" + test[0]);

                    System.out.println();
                    System.out.println(temp);
                    System.out.println(args.length);
                    for (int i = 0; i < args.length; i++) {
                        System.out.println(args[i]);
                    }



                }
                // input is args_var
                else if (argsVarSize == 1) {
                    System.out.println("test----------- " + ctx.func_dcl().get(each_func_dcl).getText());

                }
                // if it doesn't have no output and input
                else if (argsSize == 0 && argsVarSize == 0) {
                    System.out.println("test----------- " + ctx.func_dcl().get(each_func_dcl).getText());
                    FunctionEntry functionEntry = new FunctionEntry();
                    functionEntry.setEntryType(Entry.EntryType.FUNCTION);

                    String name = ctx.func_dcl().get(each_func_dcl).ID().getText();
                    functionEntry.setName(name);

                    // -1 in functions from declare scope means the size has to be calculated later
                    //----------------------------------------------------------------to-be-checked---------------------
                    functionEntry.setSize(-1);
                }
            }


        }
//        for (int i = 0; i < ctx.func_dcl().size(); i++) {
//            System.out.println(ctx.func_dcl().get(i).ID().getText());
//            for (int j = 0; j < ctx.func_dcl().get(i).args().size(); j++) {
//                System.out.println(ctx.func_dcl().get(i).args().get(j).getText());
//                System.out.print("args_var: ");
//                System.out.println(ctx.func_dcl().get(i).args_var());
//            }
//            System.out.println("---------------");
//        }